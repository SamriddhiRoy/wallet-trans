{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samri\\\\wallet trans\\\\wallet\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef } from \"react\";\n// import * as d3 from \"d3\";\n// import { mockInflowOutflowData } from \"../data/mockData\";\n\n// const Graph = ({ nodes, links }) => {\n//   const svgRef = useRef();\n\n//   useEffect(() => {\n//     const svg = d3.select(svgRef.current);\n//     svg.selectAll(\"*\").remove();\n\n//     const width = 1200;\n//     const height = 800;\n\n//     const simulation = d3.forceSimulation(nodes)\n//       .force(\"link\", d3.forceLink(links).id(d => d.id).distance(240))\n//       .force(\"charge\", d3.forceManyBody().strength(-400))\n//       .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n//     svg.append(\"defs\").append(\"marker\")\n//       .attr(\"id\", \"arrow\")\n//       .attr(\"viewBox\", \"0 -5 10 10\")\n//       .attr(\"refX\", 36)\n//       .attr(\"refY\", 0)\n//       .attr(\"markerWidth\", 6)\n//       .attr(\"markerHeight\", 6)\n//       .attr(\"orient\", \"auto\")\n//       .append(\"path\")\n//       .attr(\"d\", \"M0,-5L10,0L0,5\")\n//       .attr(\"fill\", \"#00f2ff\");\n\n//     const link = svg.append(\"g\")\n//       .attr(\"stroke\", \"#888\")\n//       .selectAll(\"line\")\n//       .data(links)\n//       .enter()\n//       .append(\"line\")\n//       .attr(\"stroke-width\", 2.5)\n//       .attr(\"stroke\", d => parseFloat(d.amount) > 1 ? \"#00f2ff\" : \"#ff00a1\")\n//       .attr(\"stroke-dasharray\", d => parseFloat(d.amount) > 1 ? \"5,3\" : \"4,3\")\n//       .attr(\"marker-end\", \"url(#arrow)\");\n\n//     const node = svg.append(\"g\")\n//       .selectAll(\"foreignObject\")\n//       .data(nodes)\n//       .enter()\n//       .append(\"foreignObject\")\n//       .attr(\"width\", 180)\n//       .attr(\"height\", 100)\n//       .attr(\"x\", -90)\n//       .attr(\"y\", -50)\n//       .html(d => {\n//         const label = d.label || `${d.id.slice(0, 6)}...${d.id.slice(-6)}`;\n\n//         let amount = \"No Data\";\n//         let date = \"No Data\";\n\n//         // const inflows = mockInflowOutflowData[d.id]?.inflows || [];\n//         // const outflows = mockInflowOutflowData[d.id]?.outflows || [];\n\n//         // if (inflows.length > 0) {\n//         //   amount = `${inflows[0].amount} BTC`;\n//         //   date = inflows[0].date;\n//         // } else if (outflows.length > 0) {\n//         //   amount = `${outflows[0].amount} BTC`;\n//         //   date = outflows[0].date;\n//         // }\n\n//         let inflows = mockInflowOutflowData[d.id]?.inflows || [];\n// let outflows = mockInflowOutflowData[d.id]?.outflows || [];\n\n// if (inflows.length === 0 && outflows.length === 0) {\n//   // Look into every nodeâ€™s inflows/outflows to find a match\n//   for (const key in mockInflowOutflowData) {\n//     const entry = mockInflowOutflowData[key];\n\n//     const inflowMatch = entry.inflows?.find(tx => tx.sender === d.id);\n//     const outflowMatch = entry.outflows?.find(tx => tx.beneficiary_address === d.id);\n\n//     if (inflowMatch) {\n//       amount = `${inflowMatch.amount} BTC`;\n//       date = inflowMatch.date;\n//       break;\n//     } else if (outflowMatch) {\n//       amount = `${outflowMatch.amount} BTC`;\n//       date = outflowMatch.date;\n//       break;\n//     }\n//   }\n// } else if (inflows.length > 0) {\n//   amount = `${inflows[0].amount} BTC`;\n//   date = inflows[0].date;\n// } else if (outflows.length > 0) {\n//   amount = `${outflows[0].amount} BTC`;\n//   date = outflows[0].date;\n// }\n\n//         const bgColor = d.label === \"Changenow\" ? \"#ff8800\" :\n//                         d.label === \"Whitebit\"  ? \"#b794f4\" :\n//                         d.label                 ? \"#ffb6c1\" :\n//                                                   \"#38b2ac\";\n\n//         return `\n//           <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"\n//             background: ${bgColor};\n//             border-radius: 25px;\n//             padding: 6px 10px;\n//             color: white;\n//             text-align: center;\n//             font-size: 13px;\n//             font-weight: 500;\n//             box-shadow: 0 0 8px rgba(255,255,255,0.5);\n//             cursor: pointer;\n//             margin-bottom: 5px;\n//           \">${label}</div>\n//           <div style=\"display: flex; justify-content: space-between; margin-top: 5px;\">\n//             <div style=\"\n//               background-color: #333;\n//               color: white;\n//               padding: 5px 10px;\n//               border-radius: 12px;\n//               font-size: 10px;\n//               font-weight: 600;\n//             \">${amount} | ${date}</div>\n//             <div style=\"\n//               background-color: #333;\n//               color: white;\n//               padding: 5px 10px;\n//               border-radius: 12px;\n//               font-size: 10px;\n//               font-weight: 600;\n//             \">${d.id}</div>\n//           </div>\n//         `;\n//       });\n\n//     simulation.on(\"tick\", () => {\n//       link\n//         .attr(\"x1\", d => d.source.x)\n//         .attr(\"y1\", d => d.source.y)\n//         .attr(\"x2\", d => d.target.x)\n//         .attr(\"y2\", d => d.target.y);\n\n//       node\n//         .attr(\"x\", d => d.x - 90)\n//         .attr(\"y\", d => d.y - 50);\n//     });\n\n//   }, [nodes, links]);\n\n//   return (\n//     <svg\n//       ref={svgRef}\n//       width={1200}\n//       height={800}\n//       style={{\n//         backgroundColor: \"#000\",\n//         backgroundImage: \"url('/graph-bg.png')\",\n//         backgroundSize: \"contain\",\n//         backgroundRepeat: \"no-repeat\",\n//         backgroundPosition: \"center\"\n//       }}\n//     ></svg>\n//   );\n// };\n\n// export default Graph;\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  data\n}) => {\n  _s();\n  const svgRef = useRef();\n  useEffect(() => {\n    if (!data) return;\n    const width = 1200;\n    const height = 600;\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    svg.attr(\"width\", width).attr(\"height\", height).attr(\"viewBox\", [0, 0, width, height]).style(\"background\", \"black\");\n\n    // Add defs for arrowhead\n    const defs = svg.append(\"defs\");\n    defs.append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 15).attr(\"refY\", 0).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", \"cyan\");\n\n    // Zoom group\n    const g = svg.append(\"g\").attr(\"class\", \"zoom-group\");\n    svg.call(d3.zoom().on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n    }));\n    const {\n      nodes,\n      links\n    } = data;\n\n    // Layout positions\n    const centerNode = nodes.find(n => n.type === \"center\");\n    const inflowNodes = nodes.filter(n => n.type === \"inflow\");\n    const outflowNodes = nodes.filter(n => n.type === \"outflow\");\n    centerNode.x = centerX;\n    centerNode.y = centerY;\n    inflowNodes.forEach((node, i) => {\n      node.x = centerX - 300;\n      node.y = centerY - (inflowNodes.length - 1) * 60 / 2 + i * 60;\n    });\n    outflowNodes.forEach((node, i) => {\n      node.x = centerX + 300;\n      node.y = centerY - (outflowNodes.length - 1) * 60 / 2 + i * 60;\n    });\n    const allNodes = [...inflowNodes, centerNode, ...outflowNodes];\n\n    // Draw links\n    g.selectAll(\"line.link\").data(links).join(\"line\").attr(\"x1\", d => getNode(d.source).x).attr(\"y1\", d => getNode(d.source).y).attr(\"x2\", d => getNode(d.target).x).attr(\"y2\", d => getNode(d.target).y).attr(\"stroke\", d => d.type === \"inflow\" ? \"magenta\" : \"cyan\").attr(\"stroke-width\", 2).attr(\"stroke-dasharray\", \"4,2\").attr(\"marker-end\", \"url(#arrowhead)\");\n\n    // Draw link labels\n    g.selectAll(\"text.link-label\").data(links).join(\"text\").attr(\"x\", d => (getNode(d.source).x + getNode(d.target).x) / 2).attr(\"y\", d => (getNode(d.source).y + getNode(d.target).y) / 2 - 5).attr(\"text-anchor\", \"middle\").attr(\"fill\", \"white\").style(\"font-size\", \"12px\").text(d => `${d.amount} BTC | ${d.time}`);\n\n    // Draw nodes\n    g.selectAll(\"rect.node\").data(allNodes).join(\"rect\").attr(\"x\", d => d.x - 60).attr(\"y\", d => d.y - 20).attr(\"rx\", 15).attr(\"ry\", 15).attr(\"width\", 120).attr(\"height\", 40).attr(\"fill\", d => d.label === \"Changenow\" ? \"orange\" : \"#2bb3b3\").attr(\"stroke\", \"white\").attr(\"stroke-width\", 1.5).attr(\"filter\", \"drop-shadow(0 0 5px black)\");\n\n    // Draw node labels\n    g.selectAll(\"text.node-label\").data(allNodes).join(\"text\").attr(\"x\", d => d.x).attr(\"y\", d => d.y + 5).attr(\"text-anchor\", \"middle\").attr(\"fill\", \"white\").style(\"font-size\", \"14px\").text(d => d.label);\n    function getNode(id) {\n      return nodes.find(n => n.id === id);\n    }\n  }, [data]);\n\n  // SVG Export logic\n  const downloadSVG = () => {\n    const svg = svgRef.current;\n    if (!svg) return;\n    const clone = svg.cloneNode(true);\n    inlineAllStyles(svg, clone);\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(clone);\n    const blob = new Blob([svgString], {\n      type: \"image/svg+xml;charset=utf-8\"\n    });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"graph-export.svg\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n  const inlineAllStyles = (original, clone) => {\n    const originalEls = original.querySelectorAll(\"*\");\n    const cloneEls = clone.querySelectorAll(\"*\");\n    for (let i = 0; i < originalEls.length; i++) {\n      const style = window.getComputedStyle(originalEls[i]);\n      for (const key of style) {\n        cloneEls[i].style[key] = style.getPropertyValue(key);\n      }\n    }\n    clone.setAttribute(\"width\", original.getAttribute(\"width\"));\n    clone.setAttribute(\"height\", original.getAttribute(\"height\"));\n    const vb = original.getAttribute(\"viewBox\");\n    if (vb) clone.setAttribute(\"viewBox\", vb);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: downloadSVG,\n      style: {\n        marginTop: \"1rem\",\n        padding: \"8px 12px\"\n      },\n      children: \"Export SVG\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Graph, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","Fragment","_Fragment","Graph","data","_s","svgRef","width","height","centerX","centerY","svg","select","current","selectAll","remove","attr","style","defs","append","g","call","zoom","on","event","transform","nodes","links","centerNode","find","n","type","inflowNodes","filter","outflowNodes","x","y","forEach","node","i","length","allNodes","join","d","getNode","source","target","text","amount","time","label","id","downloadSVG","clone","cloneNode","inlineAllStyles","serializer","XMLSerializer","svgString","serializeToString","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","original","originalEls","querySelectorAll","cloneEls","window","getComputedStyle","key","getPropertyValue","setAttribute","getAttribute","vb","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginTop","padding","_c","$RefreshReg$"],"sources":["C:/Users/Samri/wallet trans/wallet/src/components/Graph.js"],"sourcesContent":["// import React, { useEffect, useRef } from \"react\";\n// import * as d3 from \"d3\";\n// import { mockInflowOutflowData } from \"../data/mockData\";\n\n// const Graph = ({ nodes, links }) => {\n//   const svgRef = useRef();\n\n//   useEffect(() => {\n//     const svg = d3.select(svgRef.current);\n//     svg.selectAll(\"*\").remove();\n\n//     const width = 1200;\n//     const height = 800;\n\n//     const simulation = d3.forceSimulation(nodes)\n//       .force(\"link\", d3.forceLink(links).id(d => d.id).distance(240))\n//       .force(\"charge\", d3.forceManyBody().strength(-400))\n//       .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n//     svg.append(\"defs\").append(\"marker\")\n//       .attr(\"id\", \"arrow\")\n//       .attr(\"viewBox\", \"0 -5 10 10\")\n//       .attr(\"refX\", 36)\n//       .attr(\"refY\", 0)\n//       .attr(\"markerWidth\", 6)\n//       .attr(\"markerHeight\", 6)\n//       .attr(\"orient\", \"auto\")\n//       .append(\"path\")\n//       .attr(\"d\", \"M0,-5L10,0L0,5\")\n//       .attr(\"fill\", \"#00f2ff\");\n\n//     const link = svg.append(\"g\")\n//       .attr(\"stroke\", \"#888\")\n//       .selectAll(\"line\")\n//       .data(links)\n//       .enter()\n//       .append(\"line\")\n//       .attr(\"stroke-width\", 2.5)\n//       .attr(\"stroke\", d => parseFloat(d.amount) > 1 ? \"#00f2ff\" : \"#ff00a1\")\n//       .attr(\"stroke-dasharray\", d => parseFloat(d.amount) > 1 ? \"5,3\" : \"4,3\")\n//       .attr(\"marker-end\", \"url(#arrow)\");\n\n//     const node = svg.append(\"g\")\n//       .selectAll(\"foreignObject\")\n//       .data(nodes)\n//       .enter()\n//       .append(\"foreignObject\")\n//       .attr(\"width\", 180)\n//       .attr(\"height\", 100)\n//       .attr(\"x\", -90)\n//       .attr(\"y\", -50)\n//       .html(d => {\n//         const label = d.label || `${d.id.slice(0, 6)}...${d.id.slice(-6)}`;\n\n//         let amount = \"No Data\";\n//         let date = \"No Data\";\n\n//         // const inflows = mockInflowOutflowData[d.id]?.inflows || [];\n//         // const outflows = mockInflowOutflowData[d.id]?.outflows || [];\n\n        \n//         // if (inflows.length > 0) {\n//         //   amount = `${inflows[0].amount} BTC`;\n//         //   date = inflows[0].date;\n//         // } else if (outflows.length > 0) {\n//         //   amount = `${outflows[0].amount} BTC`;\n//         //   date = outflows[0].date;\n//         // }\n        \n//         let inflows = mockInflowOutflowData[d.id]?.inflows || [];\n// let outflows = mockInflowOutflowData[d.id]?.outflows || [];\n\n// if (inflows.length === 0 && outflows.length === 0) {\n//   // Look into every nodeâ€™s inflows/outflows to find a match\n//   for (const key in mockInflowOutflowData) {\n//     const entry = mockInflowOutflowData[key];\n\n//     const inflowMatch = entry.inflows?.find(tx => tx.sender === d.id);\n//     const outflowMatch = entry.outflows?.find(tx => tx.beneficiary_address === d.id);\n\n//     if (inflowMatch) {\n//       amount = `${inflowMatch.amount} BTC`;\n//       date = inflowMatch.date;\n//       break;\n//     } else if (outflowMatch) {\n//       amount = `${outflowMatch.amount} BTC`;\n//       date = outflowMatch.date;\n//       break;\n//     }\n//   }\n// } else if (inflows.length > 0) {\n//   amount = `${inflows[0].amount} BTC`;\n//   date = inflows[0].date;\n// } else if (outflows.length > 0) {\n//   amount = `${outflows[0].amount} BTC`;\n//   date = outflows[0].date;\n// }\n\n\n//         const bgColor = d.label === \"Changenow\" ? \"#ff8800\" :\n//                         d.label === \"Whitebit\"  ? \"#b794f4\" :\n//                         d.label                 ? \"#ffb6c1\" :\n//                                                   \"#38b2ac\";\n\n//         return `\n//           <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"\n//             background: ${bgColor};\n//             border-radius: 25px;\n//             padding: 6px 10px;\n//             color: white;\n//             text-align: center;\n//             font-size: 13px;\n//             font-weight: 500;\n//             box-shadow: 0 0 8px rgba(255,255,255,0.5);\n//             cursor: pointer;\n//             margin-bottom: 5px;\n//           \">${label}</div>\n//           <div style=\"display: flex; justify-content: space-between; margin-top: 5px;\">\n//             <div style=\"\n//               background-color: #333;\n//               color: white;\n//               padding: 5px 10px;\n//               border-radius: 12px;\n//               font-size: 10px;\n//               font-weight: 600;\n//             \">${amount} | ${date}</div>\n//             <div style=\"\n//               background-color: #333;\n//               color: white;\n//               padding: 5px 10px;\n//               border-radius: 12px;\n//               font-size: 10px;\n//               font-weight: 600;\n//             \">${d.id}</div>\n//           </div>\n//         `;\n//       });\n\n//     simulation.on(\"tick\", () => {\n//       link\n//         .attr(\"x1\", d => d.source.x)\n//         .attr(\"y1\", d => d.source.y)\n//         .attr(\"x2\", d => d.target.x)\n//         .attr(\"y2\", d => d.target.y);\n\n//       node\n//         .attr(\"x\", d => d.x - 90)\n//         .attr(\"y\", d => d.y - 50);\n//     });\n\n//   }, [nodes, links]);\n\n//   return (\n//     <svg\n//       ref={svgRef}\n//       width={1200}\n//       height={800}\n//       style={{\n//         backgroundColor: \"#000\",\n//         backgroundImage: \"url('/graph-bg.png')\",\n//         backgroundSize: \"contain\",\n//         backgroundRepeat: \"no-repeat\",\n//         backgroundPosition: \"center\"\n//       }}\n//     ></svg>\n//   );\n// };\n\n// export default Graph;\n\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst Graph = ({ data }) => {\n  const svgRef = useRef();\n\n  useEffect(() => {\n    if (!data) return;\n\n    const width = 1200;\n    const height = 600;\n    const centerX = width / 2;\n    const centerY = height / 2;\n\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    svg\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .attr(\"viewBox\", [0, 0, width, height])\n      .style(\"background\", \"black\");\n\n    // Add defs for arrowhead\n    const defs = svg.append(\"defs\");\n    defs\n      .append(\"marker\")\n      .attr(\"id\", \"arrowhead\")\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 15)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\")\n      .attr(\"fill\", \"cyan\");\n\n    // Zoom group\n    const g = svg.append(\"g\").attr(\"class\", \"zoom-group\");\n\n    svg.call(\n      d3.zoom().on(\"zoom\", (event) => {\n        g.attr(\"transform\", event.transform);\n      })\n    );\n\n    const { nodes, links } = data;\n\n    // Layout positions\n    const centerNode = nodes.find((n) => n.type === \"center\");\n    const inflowNodes = nodes.filter((n) => n.type === \"inflow\");\n    const outflowNodes = nodes.filter((n) => n.type === \"outflow\");\n\n    centerNode.x = centerX;\n    centerNode.y = centerY;\n\n    inflowNodes.forEach((node, i) => {\n      node.x = centerX - 300;\n      node.y = centerY - (inflowNodes.length - 1) * 60 / 2 + i * 60;\n    });\n\n    outflowNodes.forEach((node, i) => {\n      node.x = centerX + 300;\n      node.y = centerY - (outflowNodes.length - 1) * 60 / 2 + i * 60;\n    });\n\n    const allNodes = [...inflowNodes, centerNode, ...outflowNodes];\n\n    // Draw links\n    g.selectAll(\"line.link\")\n      .data(links)\n      .join(\"line\")\n      .attr(\"x1\", (d) => getNode(d.source).x)\n      .attr(\"y1\", (d) => getNode(d.source).y)\n      .attr(\"x2\", (d) => getNode(d.target).x)\n      .attr(\"y2\", (d) => getNode(d.target).y)\n      .attr(\"stroke\", (d) => (d.type === \"inflow\" ? \"magenta\" : \"cyan\"))\n      .attr(\"stroke-width\", 2)\n      .attr(\"stroke-dasharray\", \"4,2\")\n      .attr(\"marker-end\", \"url(#arrowhead)\");\n\n    // Draw link labels\n    g.selectAll(\"text.link-label\")\n      .data(links)\n      .join(\"text\")\n      .attr(\"x\", (d) => (getNode(d.source).x + getNode(d.target).x) / 2)\n      .attr(\"y\", (d) => (getNode(d.source).y + getNode(d.target).y) / 2 - 5)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"white\")\n      .style(\"font-size\", \"12px\")\n      .text((d) => `${d.amount} BTC | ${d.time}`);\n\n    // Draw nodes\n    g.selectAll(\"rect.node\")\n      .data(allNodes)\n      .join(\"rect\")\n      .attr(\"x\", (d) => d.x - 60)\n      .attr(\"y\", (d) => d.y - 20)\n      .attr(\"rx\", 15)\n      .attr(\"ry\", 15)\n      .attr(\"width\", 120)\n      .attr(\"height\", 40)\n      .attr(\"fill\", (d) =>\n        d.label === \"Changenow\" ? \"orange\" : \"#2bb3b3\"\n      )\n      .attr(\"stroke\", \"white\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\"filter\", \"drop-shadow(0 0 5px black)\");\n\n    // Draw node labels\n    g.selectAll(\"text.node-label\")\n      .data(allNodes)\n      .join(\"text\")\n      .attr(\"x\", (d) => d.x)\n      .attr(\"y\", (d) => d.y + 5)\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", \"white\")\n      .style(\"font-size\", \"14px\")\n      .text((d) => d.label);\n\n    function getNode(id) {\n      return nodes.find((n) => n.id === id);\n    }\n  }, [data]);\n\n  // SVG Export logic\n  const downloadSVG = () => {\n    const svg = svgRef.current;\n    if (!svg) return;\n\n    const clone = svg.cloneNode(true);\n    inlineAllStyles(svg, clone);\n\n    const serializer = new XMLSerializer();\n    const svgString = serializer.serializeToString(clone);\n    const blob = new Blob([svgString], { type: \"image/svg+xml;charset=utf-8\" });\n    const url = URL.createObjectURL(blob);\n\n    const link = document.createElement(\"a\");\n    link.href = url;\n    link.download = \"graph-export.svg\";\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  };\n\n  const inlineAllStyles = (original, clone) => {\n    const originalEls = original.querySelectorAll(\"*\");\n    const cloneEls = clone.querySelectorAll(\"*\");\n\n    for (let i = 0; i < originalEls.length; i++) {\n      const style = window.getComputedStyle(originalEls[i]);\n      for (const key of style) {\n        cloneEls[i].style[key] = style.getPropertyValue(key);\n      }\n    }\n\n    clone.setAttribute(\"width\", original.getAttribute(\"width\"));\n    clone.setAttribute(\"height\", original.getAttribute(\"height\"));\n    const vb = original.getAttribute(\"viewBox\");\n    if (vb) clone.setAttribute(\"viewBox\", vb);\n  };\n\n  return (\n    <>\n      <svg ref={svgRef} />\n      <button\n        onClick={downloadSVG}\n        style={{ marginTop: \"1rem\", padding: \"8px 12px\" }}\n      >\n        Export SVG\n      </button>\n    </>\n  );\n};\n\nexport default Graph;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEzB,MAAMC,KAAK,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAMC,MAAM,GAAGV,MAAM,CAAC,CAAC;EAEvBC,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,IAAI,EAAE;IAEX,MAAMG,KAAK,GAAG,IAAI;IAClB,MAAMC,MAAM,GAAG,GAAG;IAClB,MAAMC,OAAO,GAAGF,KAAK,GAAG,CAAC;IACzB,MAAMG,OAAO,GAAGF,MAAM,GAAG,CAAC;IAE1B,MAAMG,GAAG,GAAGb,EAAE,CAACc,MAAM,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}