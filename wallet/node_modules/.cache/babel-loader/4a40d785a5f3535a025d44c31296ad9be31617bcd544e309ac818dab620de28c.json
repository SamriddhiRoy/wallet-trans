{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samri\\\\wallet trans\\\\wallet\\\\src\\\\components\\\\Graph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNodePositions } from \"../store/graphSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = ({\n  nodes,\n  links\n}) => {\n  _s();\n  const svgRef = useRef();\n  const gRef = useRef();\n  const minimapRef = useRef();\n  const dispatch = useDispatch();\n  const storedPositions = useSelector(state => state.graph.nodePositions);\n  const mode = useSelector(state => state.theme.mode); // <-- Dark/Light mode\n\n  const simulationRef = useRef();\n  const allNodesRef = useRef([]);\n  const allLinksRef = useRef([]);\n  const drag = simulation => {\n    return d3.drag().on(\"start\", event => {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      event.subject.fx = event.subject.x;\n      event.subject.fy = event.subject.y;\n    }).on(\"drag\", event => {\n      event.subject.fx = event.x;\n      event.subject.fy = event.y;\n    }).on(\"end\", event => {\n      if (!event.active) simulation.alphaTarget(0);\n      dispatch(setNodePositions({\n        [event.subject.id]: {\n          fx: event.subject.fx,\n          fy: event.subject.fy\n        }\n      }));\n    });\n  };\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n    const width = 1200;\n    const height = 800;\n    const inflowLinks = links.filter(link => {\n      var _nodes$, _link$target, _nodes$2;\n      return link.target === ((_nodes$ = nodes[0]) === null || _nodes$ === void 0 ? void 0 : _nodes$.id) || ((_link$target = link.target) === null || _link$target === void 0 ? void 0 : _link$target.id) === ((_nodes$2 = nodes[0]) === null || _nodes$2 === void 0 ? void 0 : _nodes$2.id);\n    });\n    const outflowLinks = links.filter(link => {\n      var _nodes$3, _link$source, _nodes$4;\n      return link.source === ((_nodes$3 = nodes[0]) === null || _nodes$3 === void 0 ? void 0 : _nodes$3.id) || ((_link$source = link.source) === null || _link$source === void 0 ? void 0 : _link$source.id) === ((_nodes$4 = nodes[0]) === null || _nodes$4 === void 0 ? void 0 : _nodes$4.id);\n    });\n    const centerNode = nodes[0];\n    const directedLinks = links.map(link => {\n      var _link$source2, _link$target2;\n      const sourceId = typeof link.source === \"string\" ? link.source : (_link$source2 = link.source) === null || _link$source2 === void 0 ? void 0 : _link$source2.id;\n      const targetId = typeof link.target === \"string\" ? link.target : (_link$target2 = link.target) === null || _link$target2 === void 0 ? void 0 : _link$target2.id;\n      if (sourceId === (centerNode === null || centerNode === void 0 ? void 0 : centerNode.id)) {\n        return {\n          ...link,\n          source: sourceId,\n          target: targetId\n        };\n      } else if (targetId === (centerNode === null || centerNode === void 0 ? void 0 : centerNode.id)) {\n        return {\n          ...link,\n          source: centerNode.id,\n          target: sourceId\n        };\n      }\n      return {\n        ...link\n      };\n    });\n    const zoom = d3.zoom().scaleExtent([0.1, 10]).on(\"zoom\", event => {\n      g.attr(\"transform\", event.transform);\n      renderMinimap();\n    });\n    svg.call(zoom);\n    const g = svg.append(\"g\");\n    gRef.current = g;\n\n    // Marker for arrows\n    g.append(\"defs\").append(\"marker\").attr(\"id\", \"arrow\").attr(\"viewBox\", \"0 -5 10 10\").attr(\"refX\", 28).attr(\"refY\", 0).attr(\"markerWidth\", 6).attr(\"markerHeight\", 6).attr(\"orient\", \"auto\").append(\"path\").attr(\"d\", \"M0,-5L10,0L0,5\").attr(\"fill\", mode === \"dark\" ? \"#00f2ff\" : \"#000\");\n\n    // Links\n    const link = g.append(\"g\").selectAll(\"line\").data(directedLinks).enter().append(\"line\").attr(\"stroke-width\", 2.5).attr(\"stroke\", d => parseFloat(d.amount) > 1 ? mode === \"dark\" ? \"#00f2ff\" : \"#0000ff\" : mode === \"dark\" ? \"#ff00a1\" : \"#ff1493\").attr(\"stroke-dasharray\", d => parseFloat(d.amount) > 1 ? \"5,3\" : \"4,3\").attr(\"marker-end\", \"url(#arrow)\");\n\n    // Restore saved positions\n    nodes.forEach(node => {\n      const saved = storedPositions[node.id];\n      if (saved) {\n        node.fx = saved.fx;\n        node.fy = saved.fy;\n      }\n    });\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(directedLinks).id(d => d.id).distance(200)).force(\"charge\", d3.forceManyBody().strength(-400)).force(\"center\", d3.forceCenter(width / 2, height / 2));\n    simulationRef.current = simulation;\n    allNodesRef.current = nodes;\n    allLinksRef.current = directedLinks;\n\n    // Nodes as foreignObjects\n    const node = g.append(\"g\").selectAll(\"foreignObject\").data(nodes).enter().append(\"foreignObject\").attr(\"width\", 180).attr(\"height\", 60).attr(\"x\", -90).attr(\"y\", -30).html(d => {\n      const label = d.label || `${d.id.slice(0, 6)}...${d.id.slice(-6)}`;\n      const dateTime = d.timestamp ? `<div style=\"font-size:10px; color:${mode === \"dark\" ? \"#eee\" : \"#333\"}; margin-top:2px;\">${d.timestamp}</div>` : '';\n      const bgColor = d.label === \"Changenow\" ? \"#ff8800\" : d.label === \"Whitebit\" ? \"#b794f4\" : d.label ? \"#ffb6c1\" : \"#38b2ac\";\n      return `\n          <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"\n            background: ${bgColor};\n            border-radius: 25px;\n            padding: 6px 10px;\n            color: white;\n            text-align: center;\n            font-size: 13px;\n            font-weight: 500;\n            box-shadow: 0 0 8px rgba(255,255,255,0.5);\n            cursor: move;\">\n            <div>${label}</div>\n            ${dateTime}\n          </div>`;\n    }).call(drag(simulation));\n\n    // For SVG Export\n    const exportNodes = g.append(\"g\").attr(\"class\", \"svg-export-texts\").selectAll(\"text\").data(nodes).enter().append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"fill\", mode === \"dark\" ? \"white\" : \"#111\").attr(\"font-size\", 13).attr(\"font-family\", \"sans-serif\").style(\"pointer-events\", \"none\").style(\"display\", \"none\").text(d => d.label || `${d.id.slice(0, 6)}...${d.id.slice(-6)}`);\n\n    // Edge labels\n    const edgeLabels = g.append(\"g\").selectAll(\"text\").data(directedLinks).enter().append(\"text\").attr(\"fill\", mode === \"dark\" ? \"#fff\" : \"#222\").attr(\"font-size\", \"12px\").attr(\"font-weight\", \"bold\").attr(\"text-anchor\", \"middle\").style(\"opacity\", 1).text(d => {\n      var _d$amount;\n      const amount = parseFloat((_d$amount = d.amount) === null || _d$amount === void 0 ? void 0 : _d$amount.replace(\" BTC\", \"\"));\n      const timestamp = d.timestamp || \"\";\n      return `${amount} BTC | ${timestamp}`;\n    });\n    simulation.on(\"tick\", () => {\n      const spacingX = 350;\n      const spacingY = 200;\n      const centerX = width / 2;\n      const centerY = height / 2;\n      if (centerNode && centerNode.fx === undefined) {\n        centerNode.fx = centerX;\n        centerNode.fy = centerY;\n      }\n      inflowLinks.forEach((link, i) => {\n        const yOffset = inflowLinks.length === 1 ? -350 : (i - (inflowLinks.length - 1) / 2) * spacingY;\n        const sourceNode = typeof link.source === \"string\" ? nodes.find(n => n.id === link.source) : link.source;\n        if (sourceNode && sourceNode.fx === undefined) {\n          sourceNode.fx = centerX - spacingX;\n          sourceNode.fy = centerY + yOffset;\n        }\n      });\n      outflowLinks.forEach((link, i) => {\n        const yOffset = outflowLinks.length === 1 ? 150 : (i - (outflowLinks.length - 1) / 2) * spacingY;\n        const targetNode = typeof link.target === \"string\" ? nodes.find(n => n.id === link.target) : link.target;\n        if (targetNode && targetNode.fx === undefined) {\n          targetNode.fx = centerX + spacingX;\n          targetNode.fy = centerY + yOffset;\n        }\n      });\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      node.attr(\"x\", d => d.x - 90).attr(\"y\", d => d.y - 30);\n      edgeLabels.attr(\"x\", d => (d.source.x + d.target.x) / 2).attr(\"y\", d => (d.source.y + d.target.y) / 2 - 20);\n      exportNodes.attr(\"x\", d => d.x).attr(\"y\", d => d.y + 5);\n      renderMinimap();\n    });\n\n    // Minimap\n    const minimap = svg.append(\"g\").attr(\"class\", \"minimap\").attr(\"transform\", `translate(${width - 200}, ${height - 150}) scale(0.15)`);\n    const minimapG = minimap.append(\"g\");\n    minimapRef.current = minimapG;\n    const renderMinimap = () => {\n      const nodes = allNodesRef.current;\n      const links = allLinksRef.current;\n      minimapG.selectAll(\"*\").remove();\n      minimapG.selectAll(\"line\").data(links).enter().append(\"line\").attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y).attr(\"stroke\", mode === \"dark\" ? \"#999\" : \"#666\").attr(\"stroke-width\", 1);\n      minimapG.selectAll(\"circle\").data(nodes).enter().append(\"circle\").attr(\"cx\", d => d.x).attr(\"cy\", d => d.y).attr(\"r\", 4).attr(\"fill\", mode === \"dark\" ? \"#00f2ff\" : \"#000\");\n      const viewTransform = d3.zoomTransform(svgRef.current);\n      minimap.selectAll(\"rect.viewport\").remove();\n      minimap.append(\"rect\").attr(\"class\", \"viewport\").attr(\"x\", -viewTransform.x / viewTransform.k).attr(\"y\", -viewTransform.y / viewTransform.k).attr(\"width\", width / viewTransform.k).attr(\"height\", height / viewTransform.k).attr(\"stroke\", mode === \"dark\" ? \"#fff\" : \"#000\").attr(\"fill\", \"none\").attr(\"stroke-width\", 1);\n    };\n    const handleDownloadSVG = () => {\n      const svgElement = svgRef.current;\n      const clone = svgElement.cloneNode(true);\n      const transform = d3.zoomTransform(svgElement);\n      const originalG = gRef.current.node();\n      const clonedG = clone.querySelector(\"g\");\n      if (clonedG) {\n        clonedG.setAttribute(\"transform\", `translate(${transform.x},${transform.y}) scale(${transform.k})`);\n      }\n      const foreignObjects = clone.querySelectorAll(\"foreignObject\");\n      foreignObjects.forEach(el => el.remove());\n      const exportTextGroup = clone.querySelector(\".svg-export-texts\");\n      if (exportTextGroup) {\n        exportTextGroup.querySelectorAll(\"text\").forEach(t => {\n          t.style.display = \"block\";\n        });\n      }\n      const serializer = new XMLSerializer();\n      const source = serializer.serializeToString(clone);\n      const blob = new Blob([source], {\n        type: \"image/svg+xml;charset=utf-8\"\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"bitcoin-graph.svg\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    };\n    window.addEventListener(\"download-svg\", handleDownloadSVG);\n    return () => {\n      window.removeEventListener(\"download-svg\", handleDownloadSVG);\n    };\n  }, [nodes, links, dispatch, storedPositions, mode]);\n  useEffect(() => {\n    allNodesRef.current = nodes;\n    allLinksRef.current = links;\n    if (minimapRef.current) {\n      minimapRef.current.selectAll(\"*\").remove();\n    }\n  }, [nodes, links]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: svgRef,\n    viewBox: \"0 0 1200 800\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: mode === \"dark\" ? \"#000\" : \"#f8f8f8\",\n      backgroundImage: mode === \"dark\" ? \"url('/graph-bg.png')\" : \"none\",\n      backgroundSize: \"contain\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundPosition: \"center\",\n      cursor: \"grab\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 317,\n    columnNumber: 5\n  }, this);\n};\n_s(Graph, \"M7XSRX0c0Jr1DEp12oY0bhoKiH8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useRef","d3","useDispatch","useSelector","setNodePositions","jsxDEV","_jsxDEV","Graph","nodes","links","_s","svgRef","gRef","minimapRef","dispatch","storedPositions","state","graph","nodePositions","mode","theme","simulationRef","allNodesRef","allLinksRef","drag","simulation","on","event","active","alphaTarget","restart","subject","fx","x","fy","y","id","svg","select","current","selectAll","remove","width","height","inflowLinks","filter","link","_nodes$","_link$target","_nodes$2","target","outflowLinks","_nodes$3","_link$source","_nodes$4","source","centerNode","directedLinks","map","_link$source2","_link$target2","sourceId","targetId","zoom","scaleExtent","g","attr","transform","renderMinimap","call","append","data","enter","d","parseFloat","amount","forEach","node","saved","forceSimulation","force","forceLink","distance","forceManyBody","strength","forceCenter","html","label","slice","dateTime","timestamp","bgColor","exportNodes","style","text","edgeLabels","_d$amount","replace","spacingX","spacingY","centerX","centerY","undefined","i","yOffset","length","sourceNode","find","n","targetNode","minimap","minimapG","viewTransform","zoomTransform","k","handleDownloadSVG","svgElement","clone","cloneNode","originalG","clonedG","querySelector","setAttribute","foreignObjects","querySelectorAll","el","exportTextGroup","t","display","serializer","XMLSerializer","serializeToString","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","window","addEventListener","removeEventListener","ref","viewBox","preserveAspectRatio","backgroundColor","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","cursor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Samri/wallet trans/wallet/src/components/Graph.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport * as d3 from \"d3\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setNodePositions } from \"../store/graphSlice\";\n\nconst Graph = ({ nodes, links }) => {\n  const svgRef = useRef();\n  const gRef = useRef();\n  const minimapRef = useRef();\n  const dispatch = useDispatch();\n  const storedPositions = useSelector((state) => state.graph.nodePositions);\n  const mode = useSelector((state) => state.theme.mode); // <-- Dark/Light mode\n\n  const simulationRef = useRef();\n  const allNodesRef = useRef([]);\n  const allLinksRef = useRef([]);\n\n  const drag = (simulation) => {\n    return d3.drag()\n      .on(\"start\", (event) => {\n        if (!event.active) simulation.alphaTarget(0.3).restart();\n        event.subject.fx = event.subject.x;\n        event.subject.fy = event.subject.y;\n      })\n      .on(\"drag\", (event) => {\n        event.subject.fx = event.x;\n        event.subject.fy = event.y;\n      })\n      .on(\"end\", (event) => {\n        if (!event.active) simulation.alphaTarget(0);\n        dispatch(setNodePositions({ [event.subject.id]: { fx: event.subject.fx, fy: event.subject.fy } }));\n      });\n  };\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    svg.selectAll(\"*\").remove();\n\n    const width = 1200;\n    const height = 800;\n\n    const inflowLinks = links.filter(link => link.target === nodes[0]?.id || link.target?.id === nodes[0]?.id);\n    const outflowLinks = links.filter(link => link.source === nodes[0]?.id || link.source?.id === nodes[0]?.id);\n    const centerNode = nodes[0];\n\n    const directedLinks = links.map(link => {\n      const sourceId = typeof link.source === \"string\" ? link.source : link.source?.id;\n      const targetId = typeof link.target === \"string\" ? link.target : link.target?.id;\n      if (sourceId === centerNode?.id) {\n        return { ...link, source: sourceId, target: targetId };\n      } else if (targetId === centerNode?.id) {\n        return { ...link, source: centerNode.id, target: sourceId };\n      }\n      return { ...link };\n    });\n\n    const zoom = d3.zoom().scaleExtent([0.1, 10]).on(\"zoom\", (event) => {\n      g.attr(\"transform\", event.transform);\n      renderMinimap();\n    });\n\n    svg.call(zoom);\n    const g = svg.append(\"g\");\n    gRef.current = g;\n\n    // Marker for arrows\n    g.append(\"defs\").append(\"marker\")\n      .attr(\"id\", \"arrow\")\n      .attr(\"viewBox\", \"0 -5 10 10\")\n      .attr(\"refX\", 28)\n      .attr(\"refY\", 0)\n      .attr(\"markerWidth\", 6)\n      .attr(\"markerHeight\", 6)\n      .attr(\"orient\", \"auto\")\n      .append(\"path\")\n      .attr(\"d\", \"M0,-5L10,0L0,5\")\n      .attr(\"fill\", mode === \"dark\" ? \"#00f2ff\" : \"#000\");\n\n    // Links\n    const link = g.append(\"g\")\n      .selectAll(\"line\")\n      .data(directedLinks)\n      .enter()\n      .append(\"line\")\n      .attr(\"stroke-width\", 2.5)\n      .attr(\"stroke\", d => parseFloat(d.amount) > 1\n        ? (mode === \"dark\" ? \"#00f2ff\" : \"#0000ff\")\n        : (mode === \"dark\" ? \"#ff00a1\" : \"#ff1493\"))\n      .attr(\"stroke-dasharray\", d => parseFloat(d.amount) > 1 ? \"5,3\" : \"4,3\")\n      .attr(\"marker-end\", \"url(#arrow)\");\n\n    // Restore saved positions\n    nodes.forEach((node) => {\n      const saved = storedPositions[node.id];\n      if (saved) {\n        node.fx = saved.fx;\n        node.fy = saved.fy;\n      }\n    });\n\n    const simulation = d3.forceSimulation(nodes)\n      .force(\"link\", d3.forceLink(directedLinks).id(d => d.id).distance(200))\n      .force(\"charge\", d3.forceManyBody().strength(-400))\n      .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n    simulationRef.current = simulation;\n    allNodesRef.current = nodes;\n    allLinksRef.current = directedLinks;\n\n    // Nodes as foreignObjects\n    const node = g.append(\"g\")\n      .selectAll(\"foreignObject\")\n      .data(nodes)\n      .enter()\n      .append(\"foreignObject\")\n      .attr(\"width\", 180)\n      .attr(\"height\", 60)\n      .attr(\"x\", -90)\n      .attr(\"y\", -30)\n      .html(d => {\n        const label = d.label || `${d.id.slice(0, 6)}...${d.id.slice(-6)}`;\n        const dateTime = d.timestamp\n          ? `<div style=\"font-size:10px; color:${mode === \"dark\" ? \"#eee\" : \"#333\"}; margin-top:2px;\">${d.timestamp}</div>`\n          : '';\n        const bgColor = d.label === \"Changenow\"\n          ? \"#ff8800\"\n          : d.label === \"Whitebit\"\n            ? \"#b794f4\"\n            : d.label\n              ? \"#ffb6c1\"\n              : \"#38b2ac\";\n        return `\n          <div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"\n            background: ${bgColor};\n            border-radius: 25px;\n            padding: 6px 10px;\n            color: white;\n            text-align: center;\n            font-size: 13px;\n            font-weight: 500;\n            box-shadow: 0 0 8px rgba(255,255,255,0.5);\n            cursor: move;\">\n            <div>${label}</div>\n            ${dateTime}\n          </div>`;\n      })\n      .call(drag(simulation));\n\n    // For SVG Export\n    const exportNodes = g.append(\"g\")\n      .attr(\"class\", \"svg-export-texts\")\n      .selectAll(\"text\")\n      .data(nodes)\n      .enter()\n      .append(\"text\")\n      .attr(\"text-anchor\", \"middle\")\n      .attr(\"fill\", mode === \"dark\" ? \"white\" : \"#111\")\n      .attr(\"font-size\", 13)\n      .attr(\"font-family\", \"sans-serif\")\n      .style(\"pointer-events\", \"none\")\n      .style(\"display\", \"none\")\n      .text(d => d.label || `${d.id.slice(0, 6)}...${d.id.slice(-6)}`);\n\n    // Edge labels\n    const edgeLabels = g.append(\"g\")\n      .selectAll(\"text\")\n      .data(directedLinks)\n      .enter()\n      .append(\"text\")\n      .attr(\"fill\", mode === \"dark\" ? \"#fff\" : \"#222\")\n      .attr(\"font-size\", \"12px\")\n      .attr(\"font-weight\", \"bold\")\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"opacity\", 1)\n      .text(d => {\n        const amount = parseFloat(d.amount?.replace(\" BTC\", \"\"));\n        const timestamp = d.timestamp || \"\";\n        return `${amount} BTC | ${timestamp}`;\n      });\n\n    simulation.on(\"tick\", () => {\n      const spacingX = 350;\n      const spacingY = 200;\n      const centerX = width / 2;\n      const centerY = height / 2;\n\n      if (centerNode && centerNode.fx === undefined) {\n        centerNode.fx = centerX;\n        centerNode.fy = centerY;\n      }\n\n      inflowLinks.forEach((link, i) => {\n        const yOffset = inflowLinks.length === 1 ? -350 : (i - (inflowLinks.length - 1) / 2) * spacingY;\n        const sourceNode = typeof link.source === \"string\" ? nodes.find(n => n.id === link.source) : link.source;\n        if (sourceNode && sourceNode.fx === undefined) {\n          sourceNode.fx = centerX - spacingX;\n          sourceNode.fy = centerY + yOffset;\n        }\n      });\n\n      outflowLinks.forEach((link, i) => {\n        const yOffset = outflowLinks.length === 1 ? 150 : (i - (outflowLinks.length - 1) / 2) * spacingY;\n        const targetNode = typeof link.target === \"string\" ? nodes.find(n => n.id === link.target) : link.target;\n        if (targetNode && targetNode.fx === undefined) {\n          targetNode.fx = centerX + spacingX;\n          targetNode.fy = centerY + yOffset;\n        }\n      });\n\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y)\n          .attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n\n      node.attr(\"x\", d => d.x - 90).attr(\"y\", d => d.y - 30);\n      edgeLabels.attr(\"x\", d => (d.source.x + d.target.x) / 2)\n                .attr(\"y\", d => (d.source.y + d.target.y) / 2 - 20);\n      exportNodes.attr(\"x\", d => d.x).attr(\"y\", d => d.y + 5);\n      renderMinimap();\n    });\n\n    // Minimap\n    const minimap = svg.append(\"g\")\n      .attr(\"class\", \"minimap\")\n      .attr(\"transform\", `translate(${width - 200}, ${height - 150}) scale(0.15)`);\n\n    const minimapG = minimap.append(\"g\");\n    minimapRef.current = minimapG;\n\n    const renderMinimap = () => {\n      const nodes = allNodesRef.current;\n      const links = allLinksRef.current;\n\n      minimapG.selectAll(\"*\").remove();\n\n      minimapG.selectAll(\"line\")\n        .data(links)\n        .enter()\n        .append(\"line\")\n        .attr(\"x1\", d => d.source.x)\n        .attr(\"y1\", d => d.source.y)\n        .attr(\"x2\", d => d.target.x)\n        .attr(\"y2\", d => d.target.y)\n        .attr(\"stroke\", mode === \"dark\" ? \"#999\" : \"#666\")\n        .attr(\"stroke-width\", 1);\n\n      minimapG.selectAll(\"circle\")\n        .data(nodes)\n        .enter()\n        .append(\"circle\")\n        .attr(\"cx\", d => d.x)\n        .attr(\"cy\", d => d.y)\n        .attr(\"r\", 4)\n        .attr(\"fill\", mode === \"dark\" ? \"#00f2ff\" : \"#000\");\n\n      const viewTransform = d3.zoomTransform(svgRef.current);\n      minimap.selectAll(\"rect.viewport\").remove();\n      minimap.append(\"rect\")\n        .attr(\"class\", \"viewport\")\n        .attr(\"x\", -viewTransform.x / viewTransform.k)\n        .attr(\"y\", -viewTransform.y / viewTransform.k)\n        .attr(\"width\", width / viewTransform.k)\n        .attr(\"height\", height / viewTransform.k)\n        .attr(\"stroke\", mode === \"dark\" ? \"#fff\" : \"#000\")\n        .attr(\"fill\", \"none\")\n        .attr(\"stroke-width\", 1);\n    };\n\n    const handleDownloadSVG = () => {\n      const svgElement = svgRef.current;\n      const clone = svgElement.cloneNode(true);\n      const transform = d3.zoomTransform(svgElement);\n\n      const originalG = gRef.current.node();\n      const clonedG = clone.querySelector(\"g\");\n      if (clonedG) {\n        clonedG.setAttribute(\"transform\", `translate(${transform.x},${transform.y}) scale(${transform.k})`);\n      }\n\n      const foreignObjects = clone.querySelectorAll(\"foreignObject\");\n      foreignObjects.forEach(el => el.remove());\n\n      const exportTextGroup = clone.querySelector(\".svg-export-texts\");\n      if (exportTextGroup) {\n        exportTextGroup.querySelectorAll(\"text\").forEach(t => {\n          t.style.display = \"block\";\n        });\n      }\n\n      const serializer = new XMLSerializer();\n      const source = serializer.serializeToString(clone);\n      const blob = new Blob([source], { type: \"image/svg+xml;charset=utf-8\" });\n      const url = URL.createObjectURL(blob);\n\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"bitcoin-graph.svg\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n      URL.revokeObjectURL(url);\n    };\n\n    window.addEventListener(\"download-svg\", handleDownloadSVG);\n    return () => {\n      window.removeEventListener(\"download-svg\", handleDownloadSVG);\n    };\n  }, [nodes, links, dispatch, storedPositions, mode]);\n\n  useEffect(() => {\n    allNodesRef.current = nodes;\n    allLinksRef.current = links;\n    if (minimapRef.current) {\n      minimapRef.current.selectAll(\"*\").remove();\n    }\n  }, [nodes, links]);\n\n  return (\n    <svg\n      ref={svgRef}\n      viewBox=\"0 0 1200 800\"\n      preserveAspectRatio=\"xMidYMid meet\"\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: mode === \"dark\" ? \"#000\" : \"#f8f8f8\",\n        backgroundImage: mode === \"dark\" ? \"url('/graph-bg.png')\" : \"none\",\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundPosition: \"center\",\n        cursor: \"grab\"\n      }}\n    />\n  );\n};\n\nexport default Graph;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}