{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst graphSlice = createSlice({\n  name: 'graph',\n  initialState: {\n    nodePositions: {}\n  },\n  reducers: {\n    setNodePosition: (state, action) => {\n      const {\n        id,\n        fx,\n        fy\n      } = action.payload;\n      state.nodePositions[id] = {\n        fx,\n        fy\n      };\n    },\n    setNodePositions: (state, action) => {\n      state.nodePositions = {\n        ...state.nodePositions,\n        ...action.payload\n      };\n    }\n  }\n});\nexport const {\n  setNodePosition,\n  setNodePositions\n} = graphSlice.actions;\nexport default graphSlice.reducer;","map":{"version":3,"names":["createSlice","graphSlice","name","initialState","nodePositions","reducers","setNodePosition","state","action","id","fx","fy","payload","setNodePositions","actions","reducer"],"sources":["C:/Users/Samri/wallet trans/wallet/src/store/graphSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst graphSlice = createSlice({\r\n  name: 'graph',\r\n  initialState: {\r\n    nodePositions: {},\r\n  },\r\n  reducers: {\r\n    setNodePosition: (state, action) => {\r\n      const { id, fx, fy } = action.payload;\r\n      state.nodePositions[id] = { fx, fy };\r\n    },\r\n    setNodePositions: (state, action) => {\r\n   \r\n      state.nodePositions = { ...state.nodePositions, ...action.payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setNodePosition, setNodePositions } = graphSlice.actions;\r\nexport default graphSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,UAAU,GAAGD,WAAW,CAAC;EAC7BE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,aAAa,EAAE,CAAC;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,eAAe,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAM;QAAEC,EAAE;QAAEC,EAAE;QAAEC;MAAG,CAAC,GAAGH,MAAM,CAACI,OAAO;MACrCL,KAAK,CAACH,aAAa,CAACK,EAAE,CAAC,GAAG;QAAEC,EAAE;QAAEC;MAAG,CAAC;IACtC,CAAC;IACDE,gBAAgB,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAEnCD,KAAK,CAACH,aAAa,GAAG;QAAE,GAAGG,KAAK,CAACH,aAAa;QAAE,GAAGI,MAAM,CAACI;MAAQ,CAAC;IACrE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,eAAe;EAAEO;AAAiB,CAAC,GAAGZ,UAAU,CAACa,OAAO;AACvE,eAAeb,UAAU,CAACc,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}