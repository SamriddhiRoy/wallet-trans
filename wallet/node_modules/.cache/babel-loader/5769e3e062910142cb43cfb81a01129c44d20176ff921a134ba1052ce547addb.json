{"ast":null,"code":"import React,{useState}from\"react\";import Graph from\"./components/Graph\";import Sidebar from\"./components/Sidebar\";import{mockInflowOutflowData}from\"./data/mockData\";import\"./styles.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[searchAddress,setSearchAddress]=useState(\"\");const[selectedAddress,setSelectedAddress]=useState(null);const[graphNodes,setGraphNodes]=useState([]);const[graphLinks,setGraphLinks]=useState([]);const[addedNodes,setAddedNodes]=useState([]);const handleSearch=()=>{if(!mockInflowOutflowData[searchAddress])return;const baseNode={id:searchAddress};setGraphNodes([baseNode]);setGraphLinks([]);setSelectedAddress(searchAddress);setAddedNodes([]);};const handleToggleNode=(address,type)=>{const data=mockInflowOutflowData[selectedAddress];const existing=addedNodes.includes(address);if(existing){setGraphNodes(prev=>prev.filter(n=>n.id!==address));setGraphLinks(prev=>prev.filter(l=>(typeof l.source===\"string\"?l.source:l.source.id)!==address&&(typeof l.target===\"string\"?l.target:l.target.id)!==address));setAddedNodes(prev=>prev.filter(a=>a!==address));}else{const tx=[...(data.inflows||[]),...(data.outflows||[])].find(tx=>tx.address===address);const label=(tx===null||tx===void 0?void 0:tx.label)||null;setGraphNodes(prev=>[...prev,{id:address,label}]);setGraphLinks(prev=>[...prev,{source:type===\"inflow\"?address:selectedAddress,target:type===\"inflow\"?selectedAddress:address,amount:tx.amount,timestamp:tx.timestamp}]);setAddedNodes(prev=>[...prev,address]);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"topbar\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter address\",value:searchAddress,onChange:e=>setSearchAddress(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSearch,children:\"Search\"}),/*#__PURE__*/_jsx(\"button\",{className:\"download-btn\",onClick:()=>window.dispatchEvent(new Event(\"download-svg\")),children:\"Download SVG\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"content\",children:[/*#__PURE__*/_jsx(Sidebar,{selectedAddress:selectedAddress,data:mockInflowOutflowData[selectedAddress],onToggleNode:handleToggleNode,addedNodes:addedNodes}),/*#__PURE__*/_jsx(Graph,{nodes:graphNodes,links:graphLinks})]})]});};export default App;","map":{"version":3,"names":["React","useState","Graph","Sidebar","mockInflowOutflowData","jsx","_jsx","jsxs","_jsxs","App","searchAddress","setSearchAddress","selectedAddress","setSelectedAddress","graphNodes","setGraphNodes","graphLinks","setGraphLinks","addedNodes","setAddedNodes","handleSearch","baseNode","id","handleToggleNode","address","type","data","existing","includes","prev","filter","n","l","source","target","a","tx","inflows","outflows","find","label","amount","timestamp","className","children","placeholder","value","onChange","e","onClick","window","dispatchEvent","Event","onToggleNode","nodes","links"],"sources":["C:/Users/Samri/wallet trans/wallet/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Graph from \"./components/Graph\";\nimport Sidebar from \"./components/Sidebar\";\nimport { mockInflowOutflowData } from \"./data/mockData\";\nimport \"./styles.css\";\n\nconst App = () => {\n  const [searchAddress, setSearchAddress] = useState(\"\");\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [graphNodes, setGraphNodes] = useState([]);\n  const [graphLinks, setGraphLinks] = useState([]);\n  const [addedNodes, setAddedNodes] = useState([]);\n\n  const handleSearch = () => {\n    if (!mockInflowOutflowData[searchAddress]) return;\n    const baseNode = { id: searchAddress };\n    setGraphNodes([baseNode]);\n    setGraphLinks([]);\n    setSelectedAddress(searchAddress);\n    setAddedNodes([]);\n  };\n\n  const handleToggleNode = (address, type) => {\n    const data = mockInflowOutflowData[selectedAddress];\n    const existing = addedNodes.includes(address);\n\n    if (existing) {\n      setGraphNodes(prev => prev.filter(n => n.id !== address));\n      setGraphLinks(prev =>\n        prev.filter(\n          l =>\n            (typeof l.source === \"string\" ? l.source : l.source.id) !== address &&\n            (typeof l.target === \"string\" ? l.target : l.target.id) !== address\n        )\n      );\n      setAddedNodes(prev => prev.filter(a => a !== address));\n    } else {\n      const tx = [...(data.inflows || []), ...(data.outflows || [])].find(tx => tx.address === address);\n      const label = tx?.label || null;\n      setGraphNodes(prev => [...prev, { id: address, label }]);\n      setGraphLinks(prev => [\n        ...prev,\n        {\n          source: type === \"inflow\" ? address : selectedAddress,\n          target: type === \"inflow\" ? selectedAddress : address,\n          amount: tx.amount,\n          timestamp: tx.timestamp,\n        },\n      ]);\n      setAddedNodes(prev => [...prev, address]);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <div className=\"topbar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter address\"\n          value={searchAddress}\n          onChange={(e) => setSearchAddress(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button>\n        <button\n          className=\"download-btn\"\n          onClick={() => window.dispatchEvent(new Event(\"download-svg\"))}\n        >\n          Download SVG\n        </button>\n      </div>\n\n      <div className=\"content\">\n        <Sidebar\n          selectedAddress={selectedAddress}\n          data={mockInflowOutflowData[selectedAddress]}\n          onToggleNode={handleToggleNode}\n          addedNodes={addedNodes}\n        />\n        <Graph nodes={graphNodes} links={graphLinks} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}